# - object: Example_Everything__c
#   nickname: Example_Everything__c_NickName
#   count: 2
#   fields:
#     # DateTwo__c: hardcoded date
#     # DateTimeOne__c: hardcoded datetime
#     DateOne__c: |
#         ${{ faker.date.between({ from: new Date('2023-01-01'), to: new Date() }).toISOString().split('T')[0] }}
#     DateTwo__c: |
#         ${{ date_between({from: 'today', to: '+3'}) }}
#     DateTimeOne__c: |
#         ${{ datetime_between({from: 'today', to: '+3'}) }}
#     DateTimeTwo__c: |
#         ${{ faker.date.between({ from: new Date('2023-01-01T00:00:00Z'), to: new Date() }).toISOString() }}
#     Checkbox__c: ${{ faker.datatype.boolean() }}
#     Currency__c: ${{ faker.finance.amount(0, 999999, 2) }}
#     DateTime__c: |
#         ${{ faker.date.between({ from: new Date('2023-01-01T00:00:00Z'), to: new Date() }).toISOString() }}
#     Date__c: |
#         ${{ faker.date.between({ from: new Date('2023-01-01'), to: new Date() }).toISOString().split('T')[0] }}
#     Picklist__c: ${{ faker.helpers.arrayElement(['cle','eastlake']) }}
#     DependentPicklist__c: 
#       if:
#         - choice:
#             when: ${{ Picklist__c == 'cle' }}
#             pick:
#                 random_choice:
#                     - mulch
#                     - rocks
#                     - tree
#                     - weed
#         - choice:
#             when: ${{ Picklist__c == 'eastlake' }}
#             pick:
#                 random_choice:
#                     - mulch
#                     - rocks
#                     - tree
#                     - weed
#     Email__c: ${{ faker.internet.email() }}
#     MultiPicklist__c: ${{ (faker.helpers.arrayElements(['chorizo','pork','steak','tofu'])).join(';') }}
#     Number__c: |
#         ${{ faker.number.int({min: 0, max: 999999}) }}
#     Percent__c: |
#         ${{ faker.number.float({ min: 0, max: 99, precision: 0.01 }).toFixed(2) }}
#     Phone__c: ${{ faker.phone.number({style:'national'}) }}
#     RichTextAreaHtml__c: ${{ faker.lorem.text(1000) }}
#     TextAreaRich__c: ${{ faker.lorem.text(1000) }}
#     Text_Area_Long__c: (${{faker.name.firstName()}} has email ${{faker.internet.email()}})
#     Text__c: ${{ faker.lorem.text(5).substring(0, 255) }}
#     Time__c: |
#         ${{ faker.date.between({ from: new Date('1970-01-01T00:00:00Z'), to: new Date('1970-01-01T23:59:59Z') }).toISOString().split('T')[1] }}
#     Url__c: ${{ faker.internet.url() }}


- object: Example_Everything__c
  nickname: Set-1
  count: 1
  fields:
    DateOne__c: '2023-01-10'
    DateTwo__c: ${{ date('today') }}
    DateTimeOne__c: '2025-04-22T16:42:05.932Z'
    DateTimeTwo__c: ${{ datetime('today') }}

- object: Example_Everything__c
  nickname: Set-2
  count: 1
  fields:
    DateOne__c: |
        ${{ faker.date.between({ from: new Date('2023-01-01'), to: new Date() }).toISOString().split('T')[0] }}
    DateTwo__c: |
        ${{ date_between({from: 'today', to: '+3'}) }}
    DateTimeOne__c: |
        ${{ datetime_between({from: 'today', to: '+3'}) }}
    DateTimeTwo__c: |
        ${{ faker.date.between({ from: new Date('2023-01-01T00:00:00Z'), to: new Date() }).toISOString() }}
    

- object: Example_Everything__c
  nickname: Set-3
  count: 1
  fields:
    DateOne__c: |
        ${{ date_between({from: '-4', to: '+3'}) }}
    DateTwo__c: |
        ${{ date_between( { from: "-2024", to: 'today'} ) }}

      ## will cause out of valid salesforce range error  ${{ date_between( { from: '-250000000', to: 'today'} ) }} 
    DateTimeOne__c: |
        ${{ datetime_between( {from: '-4', to: '+3'} ) }}
    DateTimeTwo__c: |
        ${{ faker.date.between({ from: new Date('2023-01-01T00:00:00Z'), to: new Date() }).toISOString() }}

 ### invalid date: ${{ faker.date.between( { from: '-15', to: 'today'} )  }}
    